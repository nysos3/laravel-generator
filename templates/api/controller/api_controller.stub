<?php

namespace $NAMESPACE_API_CONTROLLER$;

use $NAMESPACE_API_REQUEST$\Create$MODEL_NAME$APIRequest;
use $NAMESPACE_API_REQUEST$\Update$MODEL_NAME$APIRequest;
use $NAMESPACE_MODEL$\$MODEL_NAME$;
use $NAMESPACE_REPOSITORY$\$MODEL_NAME$Repository;
use Illuminate\Http\Request;
use $NAMESPACE_APP$\Http\Controllers\AppBaseController;
use App\Criteria\RequestCriteria;
use App\Criteria\AccountCriteria;
use Response;
// TODO: Possibly remove `use App\Criteria\AccountCriteria;`
$DOC_CONTROLLER$
class $MODEL_NAME$APIController extends AppBaseController
{
    /** @var  $MODEL_NAME$Repository */
    private $$MODEL_NAME_CAMEL$Repository;

    public function __construct($MODEL_NAME$Repository $$MODEL_NAME_CAMEL$Repo)
    {
        $this->$MODEL_NAME_CAMEL$Repository = $$MODEL_NAME_CAMEL$Repo;
    }

    $DOC_INDEX$
    public function index(Request $request)
    {
        $this->$MODEL_NAME_CAMEL$Repository->pushCriteria(new RequestCriteria($request));
        $this->$MODEL_NAME_CAMEL$Repository->pushCriteria(new AccountCriteria());
        // TODO: Possibly remove `$this->$MODEL_NAME_CAMEL$Repository->pushCriteria(new AccountCriteria());`

        $$MODEL_NAME_PLURAL_CAMEL$ = $this->$MODEL_NAME_CAMEL$Repository->paginate();
        $$MODEL_NAME_PLURAL_CAMEL$ = $this->$MODEL_NAME_CAMEL$Repository->present($$MODEL_NAME_PLURAL_CAMEL$);
        return $this->sendIndex($$MODEL_NAME_PLURAL_CAMEL$, '$MODEL_NAME_PLURAL_HUMAN$ retrieved successfully');
    }

    $DOC_STORE$
    public function store(Create$MODEL_NAME$APIRequest $request)
    {
        $input = $request->all();

        $$MODEL_NAME_PLURAL_CAMEL$ = $this->$MODEL_NAME_CAMEL$Repository->create($input);

        $$MODEL_NAME_PLURAL_CAMEL$ = $this->$MODEL_NAME_CAMEL$Repository->present($$MODEL_NAME_PLURAL_CAMEL$);

        return $this->sendStore($$MODEL_NAME_PLURAL_CAMEL$, '$MODEL_NAME_HUMAN$ saved successfully');
    }

    $DOC_SHOW$
    public function show($id)
    {
        /** @var $MODEL_NAME$ $$MODEL_NAME_CAMEL$ */
        $$MODEL_NAME_CAMEL$ = $this->$MODEL_NAME_CAMEL$Repository->findWithoutFail($id);

        if (empty($$MODEL_NAME_CAMEL$) || $$MODEL_NAME_CAMEL$->account_id != auth()->user()->current_account_id) {
            return $this->sendError('$MODEL_NAME_HUMAN$ not found');
        }

        // TODO: Possibly remove ` || $$MODEL_NAME_CAMEL$->account_id != auth()->user()->current_account_id` from above IF

        $$MODEL_NAME_CAMEL$ = $this->$MODEL_NAME_CAMEL$Repository->present($$MODEL_NAME_CAMEL$);

        return $this->sendShow($$MODEL_NAME_CAMEL$, '$MODEL_NAME_HUMAN$ retrieved successfully');
    }

    $DOC_UPDATE$
    public function update($id, Update$MODEL_NAME$APIRequest $request)
    {
        $input = $request->all();

        /** @var $MODEL_NAME$ $$MODEL_NAME_CAMEL$ */
        $$MODEL_NAME_CAMEL$ = $this->$MODEL_NAME_CAMEL$Repository->findWithoutFail($id);

        if (empty($$MODEL_NAME_CAMEL$) || $$MODEL_NAME_CAMEL$->account_id != auth()->user()->current_account_id) {
            return $this->sendError('$MODEL_NAME_HUMAN$ not found');
        }

        // TODO: Possibly remove ` || $$MODEL_NAME_CAMEL$->account_id != auth()->user()->current_account_id` from above IF

        $$MODEL_NAME_CAMEL$ = $this->$MODEL_NAME_CAMEL$Repository->update($input, $id);

        $$MODEL_NAME_CAMEL$ = $this->$MODEL_NAME_CAMEL$Repository->present($$MODEL_NAME_CAMEL$);

        return $this->sendUpdate($$MODEL_NAME_CAMEL$, '$MODEL_NAME$ updated successfully');
    }

    $DOC_DESTROY$
    public function destroy($id)
    {
        /** @var $MODEL_NAME$ $$MODEL_NAME_CAMEL$ */
        $$MODEL_NAME_CAMEL$ = $this->$MODEL_NAME_CAMEL$Repository->findWithoutFail($id);

        if (empty($$MODEL_NAME_CAMEL$) || $$MODEL_NAME_CAMEL$->account_id != auth()->user()->current_account_id) {
            return $this->sendError('$MODEL_NAME_HUMAN$ not found');
        }

        // TODO: Possibly remove ` || $$MODEL_NAME_CAMEL$->account_id != auth()->user()->current_account_id` from above IF

        $$MODEL_NAME_CAMEL$->delete();

        return $this->sendDestroy($id, '$MODEL_NAME_HUMAN$ deleted successfully');
    }
}
